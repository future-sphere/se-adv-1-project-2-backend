generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://bctc:Bctc666!@lab.bctc.io:7087/se-adv-1-project-2-peter"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  order     Order[]
  cart      Cart[]
  address   Address[]
}

model Product {
  id             Int        @id @default(autoincrement())
  name           String
  description    String
  price          Float
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  thumbnailImage String
  images         String[]
  category       Category   @relation(fields: [categoryId], references: [id])
  categoryId     Int
  order          Order?     @relation(fields: [orderId], references: [id])
  orderId        Int?
  cartItem       CartItem[]
}

model Category {
  id             Int       @id @default(autoincrement())
  name           String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  products       Product[]
  thumbnailImage String
}

model Order {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  products  Product[]
  status    String
  userId    Int
  address   Address?  @relation(fields: [addressId], references: [id])
  addressId Int?
}

model Address {
  id        Int      @id @default(autoincrement())
  street    String
  city      String
  state     String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  order     Order[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  cartItems CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  cartId    Int
  productId Int
  quantity  Int
}
